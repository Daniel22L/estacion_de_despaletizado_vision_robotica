<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="13.0.2.2">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="2">* Image Acquisition 01: be set in a specific order (e.g., image resolution vs. offset).</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,1]" as_ord="1">open_framegrabber ('uEye', 1, 1, 0, 0, 0, 0, 'default', 8, 'default', -1, 'false', 'default', '1', 0, -1, AcqHandle)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,2]" as_ord="1">set_framegrabber_param (AcqHandle, 'auto_brightness_max_exp', 129.87)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,2]" as_ord="2">set_framegrabber_param (AcqHandle, 'auto_brightness_max_gain', 95)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,2]" as_ord="3">set_framegrabber_param (AcqHandle, 'exposure', 50.0602)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,2]" as_ord="4">set_framegrabber_param (AcqHandle, 'image_height', 3006)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,2]" as_ord="5">set_framegrabber_param (AcqHandle, 'level_controlled_trigger', 'disable')</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">* Image Acquisition 01: Attention: The initialization may fail in case parameters need to</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">grab_image_start (AcqHandle, -1)</l>
<c></c>
<l>una_vez:=1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">while (una_vez=1)</l>
<l>    tuple_gen_const (0, 0, Areas)</l>
<l>    tuple_gen_const (0, 0, pixel_mm)</l>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    grab_image_async (Image, AcqHandle, -1)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    regiongrowing (Image, Regions, 3, 3, 6,100000)</l>
<l>    select_shape (Regions, piezas, 'rectangularity', 'and', 0.8, 1)</l>
<l>    count_obj (piezas, Number)</l>
<c>                </c>
<l>    for Index := 1 to Number by 1</l>
<c>                </c>
<c>        *selecciono una pieza del vector de regiones</c>
<l>        select_obj (piezas, ObjectSelected, Index)</l>
<c>        *la rectangularizo. Esto lo hago porque se que son rectangulares. As√≠ tengo menos error</c>
<l>        shape_trans (ObjectSelected, pieza_rect, 'rectangle2')</l>
<c>        *Calculo el area</c>
<l>        area_center (pieza_rect, Area, Row, Column)</l>
<c>        </c>
<l>        tuple_insert (Areas, 0, Area, Areas)</l>
<c>        </c>
<c>        *Calculo la relacion entre pixeles y mm conociendo el area de la pieza</c>
<l>        relacion:= sqrt(Area/(240*92))</l>
<c></c>
<l>        tuple_insert (pixel_mm, 0, relacion, pixel_mm)</l>
<l>    endfor</l>
<c>    </c>
<l>    tuple_sum (pixel_mm, Sum)</l>
<l>    pixel_mm_media:= Sum/Number</l>
<c>    </c>
<l>    suma_desviacion:=0</l>
<c>    *calculo de desviacion tipica</c>
<l>    for Index:=0 to Number-1 by 1</l>
<l>        suma_desviacion:=suma_desviacion + (pixel_mm[Index]-pixel_mm_media)*(pixel_mm[Index]-pixel_mm_media)</l>
<l>    endfor</l>
<c>    </c>
<l>    desviacion_tipica:=sqrt(suma_desviacion/Number)</l>
<l>    una_vez:=0</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endwhile</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[4,1]" as_ord="1">close_framegrabber (AcqHandle)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
